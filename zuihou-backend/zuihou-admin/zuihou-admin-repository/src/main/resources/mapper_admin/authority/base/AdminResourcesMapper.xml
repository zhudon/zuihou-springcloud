<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.zuihou.admin.repository.authority.dao.AdminResourcesMapper">
  <resultMap id="BaseResultMap" type="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="menu_group_code" jdbcType="VARCHAR" property="menuGroupCode" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="targets" jdbcType="VARCHAR" property="targets" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="is_enable" jdbcType="BIT" property="isEnable" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, code, name, menu_group_code, parent_id, type, href, method, targets, 
    icon, order_num, description, path, is_enable, is_delete, create_user, create_time, 
    update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="com.github.zuihou.admin.repository.authority.example.AdminResourcesExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from a_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from a_resources
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.github.zuihou.admin.repository.authority.example.AdminResourcesExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from a_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectByAppIdAndId" parameterType="map" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <include refid="Base_Column_List" />
    from a_resources
    where 1=1 and app_id = #{appId,jdbcType=VARCHAR} and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByAppIdAndId" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from a_resources
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.zuihou.admin.repository.authority.example.AdminResourcesExample">
    <!--
    @mbggenerated
    -->
    delete from a_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  a_resources where id in
    <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
      #{item}
    </foreach> 
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <update id="removeByExample" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    update a_resources
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    update a_resources
    set is_delete = 1 
 where 1=1 and id in 
 <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
    #{item}
  </foreach>
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="removeByAppIdAndId" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    update a_resources
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    insert into a_resources (id, app_id, code,
      name, menu_group_code, parent_id, 
      type, href, method, 
      targets, icon, order_num, 
      description, path, is_enable, 
      is_delete, create_user, create_time, 
      update_user, update_time)
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{menuGroupCode,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{type,jdbcType=VARCHAR}, #{href,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{targets,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{isEnable,jdbcType=BIT}, 
      #{isDelete,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into a_resources (id, app_id, code, name, menu_group_code, parent_id, type, href, method, targets, icon, order_num, description, path, is_enable, is_delete, create_user, create_time, update_user, update_time ) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.menuGroupCode,jdbcType=VARCHAR}, #{item.parentId,jdbcType=BIGINT}, 
        #{item.type,jdbcType=VARCHAR}, #{item.href,jdbcType=VARCHAR}, #{item.method,jdbcType=VARCHAR}, 
        #{item.targets,jdbcType=VARCHAR}, #{item.icon,jdbcType=VARCHAR}, #{item.orderNum,jdbcType=INTEGER}, 
        #{item.description,jdbcType=VARCHAR}, #{item.path,jdbcType=VARCHAR}, #{item.isEnable,jdbcType=BIT}, 
        #{item.isDelete,jdbcType=BIT}, #{item.createUser,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    insert into a_resources
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="menuGroupCode != null">
        menu_group_code,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="href != null">
        href,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="targets != null">
        targets,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="menuGroupCode != null">
        #{menuGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        #{href,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="targets != null">
        #{targets,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.zuihou.admin.repository.authority.example.AdminResourcesExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from a_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update a_resources
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.menuGroupCode != null">
        menu_group_code = #{record.menuGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.href != null">
        href = #{record.href,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.targets != null">
        targets = #{record.targets,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update a_resources
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      menu_group_code = #{record.menuGroupCode,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      href = #{record.href,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      targets = #{record.targets,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    update a_resources
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="menuGroupCode != null">
        menu_group_code = #{menuGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        href = #{href,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="targets != null">
        targets = #{targets,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.github.zuihou.admin.entity.authority.po.AdminResources">
    <!--
    @mbggenerated
    -->
    update a_resources
    set app_id = #{appId,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      menu_group_code = #{menuGroupCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      targets = #{targets,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
</mapper>